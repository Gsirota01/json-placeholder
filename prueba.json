{
	"info": {
		"_postman_id": "dbda0126-a13a-490e-9f68-7e2467c58a57",
		"name": "JSON Placeholder",
		"description": "This is a collection for test some action in [https://jsonplaceholder.typicode.com/](https://jsonplaceholder.typicode.com/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31875503"
	},
	"item": [
		{
			"name": "GET posts that contains molestias text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts?q=molestias",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "q",
							"value": "molestias"
						}
					]
				},
				"description": "In this request get all the posts that contains 'molestia' text"
			},
			"response": []
		},
		{
			"name": "POST Create Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Post id is equal to 101\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(101);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Nuevo Post\",\n  \"body\": \"Contenido del nuevo post\",\n  \"userId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Username Samantha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the 'id' property in the response is equal to 3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.length > 0) {\r",
							"        pm.expect(jsonData[0].id).to.eql(3);\r",
							"    } else {\r",
							"        pm.expect.fail(\"No data found in the response\");\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"The real name is Clementine Bauch\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"     if (jsonData.length > 0) {\r",
							"        pm.expect(jsonData[0].name).to.eql(\"Clementine Bauch\");\r",
							"    } else {\r",
							"        pm.expect.fail(\"No data found in the response\");\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users?username=Samantha",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "username",
							"value": "Samantha"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET comments that contains 'consequatur necessitatibus'",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Count the comments with the text\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(3)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/comments?q=consequatur necessitatibus",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "q",
							"value": "consequatur necessitatibus"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT posts",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH post with id 55",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"UserId is 6\", function (){\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.userId).eql(6)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{base_url}}/posts/55",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"posts",
						"55"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://jsonplaceholder.typicode.com"
		}
	]
}
